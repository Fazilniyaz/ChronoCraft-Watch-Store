const mongoose = require("mongoose");

// Define the Watch Schema
const watchSchema = new mongoose.Schema({
  name: {
    type: String,
    required: [true, "Please enter the watch name!"],
    trim: true,
    maxLength: [100, "Watch name cannot exceed 100 characters"],
  },
  price: {
    type: Number,
    required: true,
    default: 0.0,
  },
  description: {
    type: String,
    required: [true, "Please provide a description of the watch"],
  },
  ratings: {
    type: String,
    default: 0,
  },
  function: {
    type: String,
    required: [true, "Please specify the function of the watch"],
    enum: [
      "Analog",
      "Analog with Date",
      "Analog with Day and Date",
      "Analog Moonphase",
      "Digital",
      "Multifunction",
      "Automatic",
      "Techno Beats",
      "Smart",
      "Analog Digital",
      "Chronograph",
    ],
  },
  collection: {
    type: String,
    required: [true, "Please specify the watch collection"],
    enum: [
      "Acetate",
      "After Dark",
      "All Nighters",
      "Arcade",
      "Athleisure",
      "Bandhan",
      "Beyond Gold",
      "Blush",
      "Blush It Up",
      "Bolt",
      "Camo",
      "Carbon Series",
      "Ceramic Fusion",
      "Classic Chrono",
      "Classic Distincta",
      "Classic Gold",
      "CLASSIQUE",
      "Classique Slim",
      "Classique Slimline",
      "CSK",
      "Denim",
      "Edge",
      "Edge Baseline",
      "Edge Ceramic",
      "Edge Fusion",
      "Edge Metal",
      "Edge Zen",
      "Elmnt",
      "Elite",
      "Essentials",
      "Fashion Acetate",
      "FastFit",
      "Fastrack Animal Print",
      "Fastrack Fit Outs",
      "Fastrack Ruffles",
      "Floral Folkart",
      "Force",
      "Fundamentals",
      "Geometrix",
      "Glitch",
      "Glitz",
      "Grandmaster",
      "Hashtag",
      "Hitlist",
      "I Love Me",
      "Karishma",
      "Karishma Radiance",
      "KARISHMA",
      "Knot",
      "Ladies Edge",
      "Ladies Karishma",
      "Linnea",
      "Love All",
      "Maritime",
      "Minimals",
      "Mission Mangal",
      "Modern Classics",
      "Multifunctions",
      "Neo",
      "Neo Black & Gold",
      "Neo Splash",
      "Neo Workdays",
      "Noir",
      "NXT",
      "Octane",
      "On Trend",
      "Onyx",
      "Opulent III",
      "Pankh",
      "Pastel Dreams",
      "Play",
      "Purple Acetate",
      "Purple Ceramics",
      "Purple Glam It Up",
      "Quartet",
      "Raga",
      "Raga Aurora",
      "Raga Chic",
      "Raga Delight",
      "Raga Facets",
      "RAGA FLORA",
      "Raga I Am",
      "Raga Moments of Joy",
      "Raga Moonlight",
      "Raga Power Pearls",
      "Raga Viva",
      "Regalia Opulent",
      "Reloaded",
      "Retro",
      "RPM",
      "SF Analog",
      "SF Hustler",
      "Shaped Cases",
      "Silver Lining",
      "Sleek",
      "Slim Multifunction",
      "Slimline",
      "Smart Plaid",
      "Sonata Pair",
      "Sparkle",
      "Splash",
      "Stellar",
      "Steel Daisies",
      "Streetwear",
      "Stunners",
      "Sunburn",
      "Techno Beats",
      "Tet",
      "TGIF",
      "Titan Bandhan",
      "Titan Premium Workwear",
      "Titan Smart",
      "Titan Smart 2",
      "Trendies",
      "Trendsetters",
      "Tripster",
      "Unveil",
      "Urban",
      "Uptown Retreat",
      "Utsav",
      "Varsity",
      "Versatyle",
      "Versatyle 2",
      "Volt",
      "Wander",
      "Wear Your Look",
      "Wedding",
      "Women of Steel",
      "Workwear",
      "Yin & Yang",
      // Add new collections here if required
    ],
  },

  brand: {
    type: String,
    required: [true, "Please specify the brand of the watch"],
    enum: ["Titan", "Fastrack", "Sonata", "Zoop", "SF"],
  },
  gender: {
    type: String,
    required: [true, "Please specify the gender"],
    enum: [
      "Men",
      "Women",
      "Unisex",
      "Couple",
      "Boys",
      "Girls",
      "Gents",
      "Kids",
    ],
  },
  strapMaterial: {
    type: String,
    required: [true, "Please specify the strap material"],
    enum: [
      "Leather",
      "Metal",
      "Stainless Steel",
      "Silicone",
      "Plastic",
      "Brass",
      "Denim",
      "PU",
      "TPU",
      "Acetate",
      "Ceramic",
      "Bi Metal",
    ],
  },
  dialColor: {
    type: String,
    required: [true, "Please specify the dial color"],
    enum: [
      "Anthracite",
      "Beige",
      "Bicolor",
      "Bicolour",
      "Black",
      "Black MOP",
      "Blue",
      "Brown",
      "Champagne",
      "Dark Brown",
      "Digital",
      "Golden",
      "Green",
      "Green MOP",
      "Grey",
      "Gun",
      "Light Brown",
      "Light Champ",
      "Light Champange",
      "Light Rose Gold",
      "Maroon",
      "Mother Of Pearl",
      "Mother of Pearl",
      "Multicoloured",
      "NA",
      "Off White",
      "Orange",
      "Pink",
      "Pink Mother Of Pearl",
      "Purple",
      "Purple Mother Of Pearl",
      "Red",
      "Rose Gold",
      "Silver",
      "Silver White",
      "Silver white",
      "White",
      "White Mother Of Pearl",
      "Yellow",
    ],
  },

  ratings: {
    type: Number,
    default: 0,
  },
  images: [
    {
      image: {
        type: String,
        required: true,
      },
    },
  ],
  // category: {
  //   type: String,
  //   required: [true, "Please specify the category"],
  //   enum: {
  //     values: ["Automatic", "Edge", "Mechanical", "Smart", "Trending"],
  //     message: "Please select correct category!",
  //   },
  // },
  category: {
    type: String,
    ref: "Category", // Reference to the Category model
    required: [true, "Please specify the category"],
  },
  stock: {
    type: Number,
    required: [true, "Please specify the stock quantity"],
    maxLength: [20, "Stock quantity cannot exceed 20 characters"],
  },
  numOfReviews: {
    type: Number,
    default: 0,
  },
  disabled: {
    type: Boolean,
    default: false, // new field to track user status
  },
  reviews: [
    {
      // name: {
      //   type: String,
      //   required: true,
      // },
      rating: {
        type: Number,
        required: true,
      },
      comment: {
        type: String,
        required: true,
      },
      user: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "User",
      },
      createdAt: {
        type: Date,
        default: Date.now,
      },
    },
  ],
  features: {
    type: [String], // Array of feature descriptions
    default: [],
  },
  offers: {
    type: String, // Example: "10% off on first purchase"
  },
  releaseDate: {
    type: Date, // Optional: To indicate when the watch was released
  },
  collectionsCount: {
    type: Number, // Count of collections for statistical purposes
  },
  user: {
    type: mongoose.Schema.Types.ObjectId,
  },
  couponsApplied: {
    type: Object, // Change from Boolean to Object
    default: null, // Optional: Set a default value
  },
  couponsApplied: [
    {
      user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
      discount: { type: Number, default: 0 },
      appliedAt: { type: Date, default: Date.now }, // Optional: To track when the coupon was applied
    },
  ],
  wishList: [
    {
      type: { type: Boolean, default: false },
      user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
    },
  ],
  createdAt: {
    type: Date,
    default: Date.now,
  },
});

// Create the model
const Watch = mongoose.model("Watch", watchSchema);

// Export the model
module.exports = Watch;
